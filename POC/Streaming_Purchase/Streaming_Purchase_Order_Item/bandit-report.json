{
  "errors": [],
  "generated_at": "2025-09-22T12:30:13Z",
  "metrics": {
    "_totals": {
      "CONFIDENCE.HIGH": 33,
      "CONFIDENCE.LOW": 3,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 33,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 3554,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 35,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\bronze_layer_handler.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 364,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\hive_metastore_manager.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 3,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 400,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\purchase_order_dqx_monitor.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 453,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\purchase_order_dqx_pipeline.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 445,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\purchase_order_dqx_rules.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 385,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\purchase_order_item_factory.py": {
      "CONFIDENCE.HIGH": 29,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 29,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 274,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\purchase_order_item_listener.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 345,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\purchase_order_item_model.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 189,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\purchase_order_item_producer.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 293,
      "nosec": 0,
      "skipped_tests": 0
    },
    "class\\purchase_order_silver_manager.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 371,
      "nosec": 0,
      "skipped_tests": 0
    }
  },
  "results": [
    {
      "code": "292                             calculate_size(sub_items)\n293                         except:\n294                             pass  # Skip inaccessible directories\n295 \n",
      "col_offset": 24,
      "end_col_offset": 32,
      "filename": "class\\bronze_layer_handler.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 293,
      "line_range": [
        293,
        294
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "359                     self.spark.sql(column_analyze_sql)\n360                 except:\n361                     pass  # Column might not exist\n362 \n",
      "col_offset": 16,
      "end_col_offset": 24,
      "filename": "class\\hive_metastore_manager.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 360,
      "line_range": [
        360,
        361
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "396                         stats[\"created_time\"] = row[1]\n397             except:\n398                 pass\n399 \n",
      "col_offset": 12,
      "end_col_offset": 20,
      "filename": "class\\hive_metastore_manager.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 397,
      "line_range": [
        397,
        398
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "401             try:\n402                 record_count = self.spark.sql(f\"SELECT COUNT(*) as count FROM {self.full_table_name}\").collect()[0].count\n403                 stats[\"record_count\"] = record_count\n",
      "col_offset": 48,
      "end_col_offset": 78,
      "filename": "class\\hive_metastore_manager.py",
      "issue_confidence": "LOW",
      "issue_cwe": {
        "id": 89,
        "link": "https://cwe.mitre.org/data/definitions/89.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 402,
      "line_range": [
        402
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "411             try:\n412                 quality_stats = self.spark.sql(f\"\"\"\n413                     SELECT\n414                         is_valid,\n415                         COUNT(*) as count,\n416                         AVG(data_quality_score) as avg_quality_score\n417                     FROM {self.full_table_name}\n418                     GROUP BY is_valid\n419                 \"\"\").collect()\n420 \n",
      "col_offset": 51,
      "end_col_offset": 25,
      "filename": "class\\hive_metastore_manager.py",
      "issue_confidence": "LOW",
      "issue_cwe": {
        "id": 89,
        "link": "https://cwe.mitre.org/data/definitions/89.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 412,
      "line_range": [
        412,
        413,
        414,
        415,
        416,
        417,
        418,
        419
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "432             try:\n433                 recent_partitions = self.spark.sql(f\"\"\"\n434                     SELECT DISTINCT ingestion_date, ingestion_hour, COUNT(*) as records\n435                     FROM {self.full_table_name}\n436                     GROUP BY ingestion_date, ingestion_hour\n437                     ORDER BY ingestion_date DESC, ingestion_hour DESC\n438                     LIMIT 10\n439                 \"\"\").collect()\n440 \n",
      "col_offset": 55,
      "end_col_offset": 25,
      "filename": "class\\hive_metastore_manager.py",
      "issue_confidence": "LOW",
      "issue_cwe": {
        "id": 89,
        "link": "https://cwe.mitre.org/data/definitions/89.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 433,
      "line_range": [
        433,
        434,
        435,
        436,
        437,
        438,
        439
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "109         weights = [p[\"weight\"] for p in self.order_patterns]\n110         pattern = random.choices(self.order_patterns, weights=weights)[0]\n111         return {\"order_status\": pattern[\"order_status\"], \"payment_status\": pattern[\"payment_status\"]}\n",
      "col_offset": 18,
      "end_col_offset": 70,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 110,
      "line_range": [
        110
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "127         if quantity > 50:\n128             discount_rate = random.uniform(0.1, 0.15)\n129         elif quantity > 20:\n",
      "col_offset": 28,
      "end_col_offset": 53,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 128,
      "line_range": [
        128
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "129         elif quantity > 20:\n130             discount_rate = random.uniform(0.05, 0.1)\n131         elif quantity > 10:\n",
      "col_offset": 28,
      "end_col_offset": 53,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 130,
      "line_range": [
        130
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "131         elif quantity > 10:\n132             discount_rate = random.uniform(0.02, 0.05)\n133 \n",
      "col_offset": 28,
      "end_col_offset": 54,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "136         # Tax (5-10% based on location)\n137         tax_rate = random.uniform(0.05, 0.10)\n138         tax_amount = round((base_amount - discount_amount) * tax_rate, 2)\n",
      "col_offset": 19,
      "end_col_offset": 45,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 137,
      "line_range": [
        137
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "143         else:\n144             shipping_cost = round(random.uniform(5.99, 29.99), 2)\n145 \n",
      "col_offset": 34,
      "end_col_offset": 61,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 144,
      "line_range": [
        144
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "164         \"\"\"\n165         issue_type = random.choice([\n166             \"negative_quantity\",\n167             \"invalid_total\",\n168             \"status_mismatch\",\n169             \"missing_customer\",\n170             \"invalid_date\",\n171             \"extreme_values\"\n172         ])\n173 \n",
      "col_offset": 21,
      "end_col_offset": 10,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 165,
      "line_range": [
        165,
        166,
        167,
        168,
        169,
        170,
        171,
        172
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "174         if issue_type == \"negative_quantity\":\n175             order.quantity = -random.randint(1, 10)\n176         elif issue_type == \"invalid_total\":\n",
      "col_offset": 30,
      "end_col_offset": 51,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 175,
      "line_range": [
        175
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "185         elif issue_type == \"extreme_values\":\n186             order.quantity = random.randint(10000, 99999)\n187             order.unit_price = random.uniform(0.001, 0.01)\n",
      "col_offset": 29,
      "end_col_offset": 57,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 186,
      "line_range": [
        186
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "186             order.quantity = random.randint(10000, 99999)\n187             order.unit_price = random.uniform(0.001, 0.01)\n188 \n",
      "col_offset": 31,
      "end_col_offset": 58,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 187,
      "line_range": [
        187
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "191         order.validation_errors = f\"Quality issue injected: {issue_type}\"\n192         order.data_quality_score = random.uniform(0.1, 0.5)\n193 \n",
      "col_offset": 35,
      "end_col_offset": 59,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 192,
      "line_range": [
        192
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "208         # Select product\n209         product = random.choice(self.products)\n210 \n",
      "col_offset": 18,
      "end_col_offset": 46,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 209,
      "line_range": [
        209
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "212         if specific_scenario == \"bulk_order\":\n213             quantity = random.randint(100, 500)\n214         elif specific_scenario == \"high_value\":\n",
      "col_offset": 23,
      "end_col_offset": 47,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 213,
      "line_range": [
        213
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "214         elif specific_scenario == \"high_value\":\n215             quantity = random.randint(10, 50)\n216             product = random.choice([p for p in self.products if p.base_price > 500])\n",
      "col_offset": 23,
      "end_col_offset": 45,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 215,
      "line_range": [
        215
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "215             quantity = random.randint(10, 50)\n216             product = random.choice([p for p in self.products if p.base_price > 500])\n217         else:\n",
      "col_offset": 22,
      "end_col_offset": 85,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 216,
      "line_range": [
        216
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "219             quantity = int(abs(random.gauss(10, 5))) + 1\n220             if random.random() < 0.1:  # 10% chance of bulk order\n221                 quantity *= 10\n",
      "col_offset": 15,
      "end_col_offset": 30,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 220,
      "line_range": [
        220
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "223         # Calculate unit price with small variations\n224         unit_price = round(product.base_price * random.uniform(0.95, 1.05), 2)\n225 \n",
      "col_offset": 48,
      "end_col_offset": 74,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 224,
      "line_range": [
        224
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "233         if financials[\"total_amount\"] > 5000:\n234             priority = random.choice([\"HIGH\", \"URGENT\"])\n235         elif financials[\"total_amount\"] > 1000:\n",
      "col_offset": 23,
      "end_col_offset": 56,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 234,
      "line_range": [
        234
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "235         elif financials[\"total_amount\"] > 1000:\n236             priority = random.choice([\"NORMAL\", \"HIGH\"])\n237         else:\n",
      "col_offset": 23,
      "end_col_offset": 56,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 236,
      "line_range": [
        236
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "237         else:\n238             priority = random.choice([\"LOW\", \"NORMAL\", \"NORMAL\"])  # Weight towards NORMAL\n239 \n",
      "col_offset": 23,
      "end_col_offset": 65,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 238,
      "line_range": [
        238
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "247             total_amount=financials[\"total_amount\"],\n248             customer_id=random.choice(self.customer_ids),\n249             vendor_id=random.choice(product.vendor_ids),\n",
      "col_offset": 24,
      "end_col_offset": 56,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 248,
      "line_range": [
        248
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "248             customer_id=random.choice(self.customer_ids),\n249             vendor_id=random.choice(product.vendor_ids),\n250             warehouse_location=random.choice(self.warehouses),\n",
      "col_offset": 22,
      "end_col_offset": 55,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 249,
      "line_range": [
        249
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "249             vendor_id=random.choice(product.vendor_ids),\n250             warehouse_location=random.choice(self.warehouses),\n251             currency=\"USD\",\n",
      "col_offset": 31,
      "end_col_offset": 61,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 250,
      "line_range": [
        250
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "253             payment_status=pattern[\"payment_status\"],\n254             shipping_method=random.choice(self.shipping_methods),\n255             priority_level=priority,\n",
      "col_offset": 28,
      "end_col_offset": 64,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 254,
      "line_range": [
        254
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "258             shipping_cost=financials[\"shipping_cost\"],\n259             created_at=datetime.utcnow() - timedelta(hours=random.randint(0, 72))\n260         )\n",
      "col_offset": 59,
      "end_col_offset": 80,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 259,
      "line_range": [
        259
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "266         # Inject quality issue if specified or randomly based on rate\n267         should_inject = inject_quality_issue if inject_quality_issue is not None else random.random() < self.quality_issue_rate\n268         if should_inject:\n",
      "col_offset": 86,
      "end_col_offset": 101,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 267,
      "line_range": [
        267
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "290         for _ in range(batch_size):\n291             scenario = random.choices(scenarios, weights=weights)[0]\n292             scenario_param = None if scenario == \"normal\" else scenario\n",
      "col_offset": 23,
      "end_col_offset": 65,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 291,
      "line_range": [
        291
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "329             for order in orders:\n330                 if random.random() < 0.7:  # 70% chance to adjust\n331                     preferred_products = [p for p in self.products if p.category in preferred_categories]\n",
      "col_offset": 19,
      "end_col_offset": 34,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 330,
      "line_range": [
        330
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "332                     if preferred_products:\n333                         product = random.choice(preferred_products)\n334                         order.product_id = product.product_id\n",
      "col_offset": 34,
      "end_col_offset": 67,
      "filename": "class\\purchase_order_item_factory.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 333,
      "line_range": [
        333
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "202                 if scenario == \"seasonal\":\n203                     season = random.choice([\"holiday\", \"back_to_school\", \"black_friday\", \"normal\"])\n204                     orders = self.factory.generate_seasonal_batch(self.batch_size, season)\n",
      "col_offset": 29,
      "end_col_offset": 99,
      "filename": "class\\purchase_order_item_producer.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 203,
      "line_range": [
        203
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    }
  ]
}