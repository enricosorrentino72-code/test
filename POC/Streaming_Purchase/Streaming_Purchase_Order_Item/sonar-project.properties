# SonarQube/SonarCloud Project Configuration
# This file configures static code analysis for the Purchase Order Item Streaming Pipeline

# Project Information
sonar.projectKey=streaming-purchase-order-item
sonar.projectName=Purchase Order Item Streaming Pipeline
sonar.projectVersion=1.0.0
sonar.organization=data-engineering-team

# Source Code Configuration
sonar.sources=class,utility,notebooks
sonar.tests=tests
sonar.language=py
sonar.sourceEncoding=UTF-8

# Python Specific Configuration
sonar.python.version=3.9,3.10,3.11

# Test and Coverage Configuration
sonar.python.coverage.reportPaths=coverage.xml
sonar.python.xunit.reportPath=test-results.xml
sonar.coverage.exclusions=**/__init__.py,**/tests/**,**/test_*.py,**/conftest.py,**/notebooks/**
sonar.test.inclusions=**/tests/**/*.py
sonar.test.exclusions=**/tests/__init__.py,**/conftest.py

# Quality Gate Configuration
# Enforce minimum 80% code coverage
sonar.qualitygate.wait=true

# Security Configuration (SAST)
sonar.python.bandit.reportPaths=bandit-report.json
sonar.security.hotspots.maxIssues=0

# Code Complexity Metrics
# Maximum cyclomatic complexity per function
sonar.python.maximumFunctionComplexityThreshold=10
# Maximum cognitive complexity per function
sonar.python.maximumCognitiveComplexityThreshold=15

# Duplications
sonar.cpd.exclusions=**/tests/**,**/__pycache__/**
sonar.duplications.minTokens=100

# Exclusions
sonar.exclusions=**/__pycache__/**,**/*.pyc,**/.pytest_cache/**,**/htmlcov/**,**/.coverage,**/venv/**,**/.venv/**

# Issue Exclusions
sonar.issue.ignore.multicriteria=e1,e2,e3

# Ignore missing docstrings in tests
sonar.issue.ignore.multicriteria.e1.ruleKey=python:S1186
sonar.issue.ignore.multicriteria.e1.resourceKey=**/tests/**/*.py

# Ignore complexity in factory classes
sonar.issue.ignore.multicriteria.e2.ruleKey=python:S3776
sonar.issue.ignore.multicriteria.e2.resourceKey=**/*factory*.py

# Ignore assert statements in tests
sonar.issue.ignore.multicriteria.e3.ruleKey=python:S101
sonar.issue.ignore.multicriteria.e3.resourceKey=**/tests/**/*.py

# Custom Rules and Thresholds
sonar.python.flake8.reportPaths=flake8-report.txt
sonar.python.pylint.reportPaths=pylint-report.txt
sonar.python.mypy.reportPaths=mypy-report.xml

# Branch Analysis
sonar.branch.name=main
sonar.branch.target=main

# Pull Request Analysis
# sonar.pullrequest.key=${PULL_REQUEST_ID}
# sonar.pullrequest.branch=${BRANCH_NAME}
# sonar.pullrequest.base=main

# Quality Profiles
sonar.qualityprofile=Sonar way

# Additional Metrics
sonar.python.file.suffixes=.py
sonar.working.directory=.scannerwork

# Linting and Code Style
sonar.python.ruff.reportPaths=ruff-report.json

# Documentation Coverage
sonar.python.interrogate.reportPath=interrogate-coverage.txt

# Vulnerability Detection
sonar.python.safety.reportPath=safety-report.json
sonar.python.pip_audit.reportPath=pip-audit-report.json

# Performance Metrics
sonar.python.radon.reportPath=radon-report.json

# Test Performance
sonar.testExecutionReportPaths=pytest-report.xml

# Custom Metrics Thresholds
sonar.core.codeCoveragePlugin=cobertura
sonar.javascript.lcov.reportPaths=

# Links
sonar.links.homepage=https://github.com/your-org/streaming-purchase-order-item
sonar.links.ci=https://github.com/your-org/streaming-purchase-order-item/actions
sonar.links.scm=https://github.com/your-org/streaming-purchase-order-item
sonar.links.issue=https://github.com/your-org/streaming-purchase-order-item/issues

# Notifications
sonar.notifications.delay=60